@startuml

!define QO (Q,orchid)
!define QW (W,orange)
!define OSG (O,lightblue)
!define Mixin (M, brown)


title EWS User Interface Widgets Class Diagram

#---------------------------------------------------------

package app

package widget

#---------------------------------------------------------

class EWSMainWindow << QW QMainWindow >>
EWSMainWindow : -simulation : SimulationState
EMSMainWindow : +play()
EMSMainWindow : +pause()
EMSMainWindow : +reset()


#---------------------------------------------------------

class DripSourceEditor << QW >>

DripSourceEditor : +enabled : bool
DripSourceEditor : +frequency : int
DripSourceEditor : +amplitude : int
DripSourceEditor : +pulse()

#---------------------------------------------------------
class BarrierTableModel << QW >>
BarrierTableModel : -selectedBarrier : Barrier
BarrierTableModel : -barriers : Set<Barrier>
BarrierTableModel : +addBarrier(w : Barrier)
BarrierTableModel : +removeBarrier(w : Barrier)
BarrierTableModel : +selectBarrier(w : Barrier)

#---------------------------------------------------------

class BarrierEditor << QW >>
BarrierEditor : +setNumSlits(slits : int[1,2])
BarrierEditor : +setSlitWidth(width : float)
BarrierEditor : +setSlitSeparation(width : float)

#---------------------------------------------------------

class QGLWidget << QW >>
QGLWidget : +glcontext


class osgViewer << OSG >>
osgViewer : +setCameraManipulator(manip : osgMatrixManipulator)
note left of osgViewer
A powerful OpenSceneGraph 
encapsulation of the multiple 
components necessary to setup
and manage the scene graph and 
OpenGL pipeline.
end note

note as N2
Class that provides a connection between the QT toolkit
and the OpenSceneGraph toolkit. This class is responsible for
displaying the world that we are interacting with.
end note

class QOSGWidget << Mixin >>
QGLWidget <|-- QOSGWidget
osgViewer <|-- QOSGWidget

N2 .> QOSGWidget

QOSGWidget : -timer : QTimer
QOSGWidget : -gw : GraphicsWindowEmbedded

QOSGWidget : paintGL()
    
QOSGWidget : resizeGL(width : int,height : int);
QOSGWidget : keyPressEvent(e : QKeyEvent*)
QOSGWidget : keyReleaseEvent(e :  QKeyEvent*)
QOSGWidget : mousePressEvent(e : QMouseEvent*)
QOSGWidget : mouseReleaseEvent(e : QMouseEvent*)
QOSGWidget : mouseMoveEvent(e : QMouseEvent*)


class osgCamera << OSG >>
osgCamera : +displaySettings : osgDisplaySettings
osgCamera : +viewport : osgViewport
osgCamera : +projectionMatrix : osgMatrix
osgCamera : +viewMatrix : osgMatrix

osgViewer *-- osgCamera : provides

class osgNode << OSG >>
osgViewer "sceneRoot" --> "1" osgNode : renders

class osgGroup << OSG >>
osgGroup o-- "0..*" osgNode : combines

class osgGeode << OSG >>
osgGeode : +drawables : List<osgDrawable>

osgNode <|-- osgGroup
osgNode <|-- osgGeode

#---------------------------------------------------------


EWSMainWindow *-- "2" DripSourceEditor
EWSMainWindow *-- "1" BarrierTableModel
EWSMainWindow *---- "1" QOSGWidget
BarrierTableModel *-- "1" BarrierEditor

end package


#---------------------------------------------------------

package drawables

class SceneRoot << OSG >>
class DrawableQtAdapter << Mixin >>

note as N3
Root object of the scene graph.
end note

N3 .> SceneRoot

end package

end package

osgGroup <|-- SceneRoot
osgGeode <|-- DrawableQtAdapter

SceneRoot "1" .> "0..*" DrawableQtAdapter


@enduml
