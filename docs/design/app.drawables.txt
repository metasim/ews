@startuml

!define QO (Q,orchid)
!define QW (W,orange)
!define OSG (O,lightblue) 
!define Mixin (M, brown)

!pragma defaultLabeldistance 1.2
!pragma defaultLabelangle 30


title 3-D Drawables Class Diagram


#-------------------------------------------------------------

package app

package drawables

class DrawableFactory << Singleton >>
DrawableFactory : +createDrawableFor(QObject) : DrawableQtAdapater

class osgGroup << OSG >>
class SceneRoot << OSG >>

osgGroup <|-- SceneRoot

#-------------------------------------------------------------
class osgGeode << OSG >>
class QObject << QO >>

class DrawableQtAdapter << Mixin >>
osgGeode <|-- DrawableQtAdapter
QObject <|-- DrawableQtAdapter


class WaterSurfaceGeom << OSG >>
DrawableQtAdapter <|-- WaterSurfaceGeom

class BarrierGeom << OSG >>
DrawableQtAdapter <|-- BarrierGeom

class FaucetGeom << OSG >>
DrawableQtAdapter <|-- FaucetGeom

end package


package model

class SimulationState << QO >>

class DripSource << QO >>
class Barrier << QO >>
class WaveMedium << QO >>

SimulationState o-- "0..*" Barrier
SimulationState o-- "1" WaveMedium
SimulationState o-- "2" DripSource

end package

SceneRoot ..> DrawableFactory : invokes
SceneRoot "1" o-- "1..*" DrawableQtAdapter : manages
 
WaveMedium <. WaterSurfaceGeom : represents
Barrier <. BarrierGeom : represents
DripSource <. FaucetGeom : represents

DrawableFactory ..> FaucetGeom : creates
DrawableFactory ..> BarrierGeom : creates
DrawableFactory ..> WaterSurfaceGeom : creates

SimulationState .> SceneRoot : notifies

end package

@enduml
