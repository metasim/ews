@startuml

#---------------------------------------------------------

package ui
end package

package simulator

#---------------------------------------------------------

package oscillators

class Oscillator 
note as N1
  <b>Oscillator</b> is the 
  base class for any
  type that injects 
  energy into the medium.
end note

Oscillator <. N1

Oscillator : +enabled :bool
Oscillator : +location : Pnt3
Oscillator : +amplitude : float

Oscillator <|-- PeriodicOscillator
PeriodicOscillator : +frequency : long

Oscillator <|-- SingleFireOscillator

end package

#---------------------------------------------------------

class SimulationState 
SimulationState : +time : long

note as N2
    The root object of all simulation state
end note

N2 .> SimulationState

SimulationState "1" -> "1.." Oscillator : has

#---------------------------------------------------------

package potentials

class Potential 
Potential : +computePotential(i : int, j : int, time : int) : float
Potential : +enabled : bool


SimulationState "1" --> "1.." Potential : has

Potential <|-- VerticalBarrier
VerticalBarrier : +slitSeparation : int
VerticalBarrier : +slitSize : int
VerticalBarrier : +thickness : int


VerticalBarrier <|-- VerticalSingleSlit
VerticalBarrier <|-- VerticalDoubleSlit

Potential <|- CompositePotential
CompositePotential -> "0..*" Potential

Potential <|-- PrecomputedPotential
Potential <|-- WallPotential
Potential <|-- BarrierPotential
Potential <|-- SlitPotential

end package

class WaveModel
SimulationState "1" -> "1" WaveModel

WaveModel --> Potential : models
WaveModel ---> Oscillator : models
WaveModel -> Lattice : produces


end package

ui .> simulator

@enduml